name: test
on: push
env:
  FAV_DB_PASSWORD: password
jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.45
          args: --timeout=5m
  test:
    runs-on: ubuntu-latest
    steps:
      - name: setup
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      - name: checkout
        uses: actions/checkout@v2
      - name: test and measure coverage
        run: make test_cov_out
      - name: upload coverage
        uses: codecov/codecov-action@v2
        with:
          files: ./coverage.txt
      - name: scan
        run: make scan
    services:
      postgres:
        image: postgres:13.1-alpine
        ports:
          - 5433:5432
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: vault
  e2e:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup env
        run: |
          cd scripts/e2e
          docker-compose up -d
      - name: install cli
        run: |
          curl https://raw.githubusercontent.com/findy-network/findy-agent-cli/HEAD/install.sh > install.sh
          chmod a+x install.sh
          sudo ./install.sh -b /bin
      - name: test # TODO: make more extensive test set
        run: |
          acator_key=$(findy-agent-cli new-key)
          findy-agent-cli authn register \
              -u test \
              --url http://localhost:8088 \
              --origin http://localhost:8088 \
              --key $acator_key
          jwt=$(findy-agent-cli authn login \
              -u test \
              --url http://localhost:8088 \
              --origin http://localhost:8088 \
              --key $acator_key)
          response=$(curl \
            -H "Authorization: Bearer $jwt" \
            -d '{"operationName":"GetUser","variables":{},"query":"query GetUser {\n  user {\n    name\n    __typename\n  }\n}"}' \
            -H "Content-Type: application/json" \
            -X POST http://localhost:8085/query)
          echo $response | grep '{"data":{"user":{"name":"test","__typename":"User"}}}'
